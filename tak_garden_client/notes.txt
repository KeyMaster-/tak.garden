# Todo
## Features
. Area control display
. Handle visualisation of high stacks (when the stack overlaps the space above)
  ptn.ninja does a side-stack for other than the top x stones, where x is the carry limit 
  Try vertically centering a stack to its space maybe?
. Game history
. Game history rewind
. Swap colour while only person in game
. Highlight clickable spaces
. Controlled spaces connectivity
. Visual overhaul 
  . Better contrast between stacked pieces of the same colour
  . Lay out piece counters near each other for better comparison
. Switch layout to be horizontal or vertical-focused based on screen width
  E.g. put counters, control display etc to the left/right of the board if the screen is wider than high,
  put them above/below if the inverse is true.

## Cleanup
. Cache container divs in rust side
. Make css classes descriptive instead of element-specific
  E.g. status-display and input-row are both a flex display row. They should be both declared the same as such
. Fix WasmPackPlugin folder creation not creating a sub-folder along a path
  at WasmPackPlugin._makeEmpty (/home/tilman/tak.garden/tak-garden-client/node_modules/@wasm-tool/wasm-pack-plugin/plugin.js:98:10)
  at WasmPackPlugin.apply (/home/tilman/tak.garden/tak-garden-client/node_modules/@wasm-tool/wasm-pack-plugin/plugin.js:52:10)

## Admin
. Expand setup notes

x Make display a proper class
x Make board + ranks/files a grid layout, instead of nested bi-directional flex

x Implement click moves
  x Get click events on spaces
  x Get space coord in click callback
  x Forward events to rust
  x Generate valid click spaces for given move state, without undo
  x Convert click events to move actions and apply
    Do the above two with a state machine. Input is always click(loc), result is state changes roughly matching move states
  x Display of partial move states
    Mainly floating carry stack
  x Finalise move
    For now with its own special button

# Setup notes
Install wasm-pack
Install npm
npm install

